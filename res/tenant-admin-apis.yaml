# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Visier Public Platform APIs
    description: Visier APIs for querying data and model metadata
    license:
        name: Apache License, Version 2.0
        url: https://www.apache.org/licenses/LICENSE-2.0
    version: 22222222.99200.16582
paths:
    /v2/admin/tenants:
        get:
            tags:
                - TenantManagement
            summary: Retrieve a list of all analytic tenants
            description: |-
                Use this API to retrieve the full list of analytic tenants managed by you with their current states and the content
                 modules assigned to them, and all other relevant details for the tenants if requested.
            operationId: TenantManagement_ListTenants
            parameters:
                - name: limit
                  in: query
                  description: The maximum number of tenants to return. Default is 400.
                  schema:
                    type: integer
                    format: int32
                - name: start
                  in: query
                  description: The starting index of the first tenant to return. Default is 0.
                  schema:
                    type: integer
                    format: int32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MaskMessage'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TenantManagementAPIListResponseDTO'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - TenantManagement
            summary: Add an analytic tenant
            description: |-
                Prior to processing and loading an analytic tenant's data files, you must provision, or create, that tenant. A
                 provisioned analytic tenant is automatically enabled. If the tenant's data is loaded after provisioning, that data
                 is immediately accessible by their users.

                 This API allows you to create an analytic tenant and identify the
                 applications assigned to the tenant. Visier organizes content under a set of modules.

                 Contact Visier Support to determine the list of modules allocated to you.
            operationId: TenantManagement_CreateTenant
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TenantManagementAPIUpdateRequestDTO'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TenantManagementAPIUpdateResponseDTO'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/admin/tenants/:tenantId:
        post:
            tags:
                - TenantManagement
            summary: Update an analytic tenant
            description: |-
                You may need to update analytic tenants as they grow and as your organization upgrades the content available to them.
                 You may also encounter a scenario where an analytic tenant transitions across different industries. To make updates
                 to your tenants, use this API.

                 * To ensure that the analytic tenant receives accurate benchmarks and predictive functionality, update their industry code in the Visier system.
                 * To programmatically assign the Home analysis that analytic tenants see at login, use this API to set the default Home analysis for a tenant and specific user groups of that tenant.

                 You can use this API to update any field on an analytic tenant, except tenantCode.
            operationId: TenantManagement_UpdateTenant
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TenantManagementAPIUpdateRequestDTO'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TenantManagementAPIUpdateResponseDTO'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v2/admin/tenants/{tenantId}:
        get:
            tags:
                - TenantManagement
            summary: Retrieve an analytic tenant's details
            description: |-
                Use this API to retrieve the details for a specified analytic tenant. Doing so allows you to see the current state
                 of the tenant, the content modules assigned to it, and all other relevant details for the tenant.
            operationId: TenantManagement_TenantInfo
            parameters:
                - name: tenantId
                  in: path
                  description: The ID of the tenant to retrieve.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MaskMessage'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TenantManagementAPIGetResponseDTO'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        CustomPropertyDTO:
            type: object
            properties:
                key:
                    type: string
                value:
                    type: string
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        HomeAnalysisByUserGroupDTO:
            type: object
            properties:
                userGroupId:
                    type: string
                homeAnalysisId:
                    type: string
        MaskMessage:
            example:
                mask: tenantDisplayName,purchasedModules
            type: object
            properties:
                mask:
                    type: string
                    description: A comma separated list of strings that specifies which fields to include in the response.
                    format: field-mask
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        TenantManagementAPIGetResponseDTO:
            type: object
            properties:
                tenantCode:
                    type: string
                    description: The tenant code of the analytic tenant. For example, "WFF_j1r~i1o"
                tenantDisplayName:
                    type: string
                    description: An identifiable tenant name that is displayed within Visier. For example, “Callisto”.
                status:
                    type: string
                    description: Whether the tenant is enabled or disabled.
                provisionDate:
                    type: string
                    description: The date that the tenant was created.
                currentDataVersion:
                    type: string
                    description: The data version ID that the tenant is using.
                dataVersionDate:
                    type: string
                    description: The date that the data version was published to production.
                purchasedModules:
                    type: array
                    items:
                        type: string
                    description: The modules assigned to the analytic tenant.
                industryCode:
                    type: integer
                    description: The 6-digit NAICS code for the industry to which the analytic tenant belongs.
                    format: uint32
                canAdministerOtherTenants:
                    type: boolean
                    description: If "true", the tenant is an administrating tenant.
                embeddableDomains:
                    type: array
                    items:
                        type: string
                    description: A comma-separated list of strings that represent the URLs, or domains, in which Visier can be embedded.
                customProperties:
                    type: array
                    items:
                        $ref: '#/components/schemas/CustomPropertyDTO'
                    description: A set of key-value pairs that represent different customizable properties for the analytic tenant.
                ssoInstanceIssuers:
                    type: array
                    items:
                        type: string
                    description: A comma-separated list of strings that represent the issuers for the SSO providers that can authenticate this tenant.
                vanityUrlName:
                    type: string
                    description: The name of the administrating tenant used in Visier URLs.
                homeAnalysisId:
                    type: string
                    description: The unique ID of the analysis that's displayed for this tenant when a user logs in.
                homeAnalysisByUserGroup:
                    type: array
                    items:
                        $ref: '#/components/schemas/HomeAnalysisByUserGroupDTO'
                    description: A list of objects representing the analysis displayed to specific user groups when users log in.
                clickThroughLink:
                    type: string
                clickThroughLinkEnabled:
                    type: string
        TenantManagementAPIListResponseDTO:
            type: object
            properties:
                tenants:
                    type: array
                    items:
                        $ref: '#/components/schemas/TenantManagementAPIGetResponseDTO'
                    description: A list of objects representing all the analytic tenants.
                limit:
                    type: integer
                    description: The limit of analytic tenants to return. The maximum value is 1000. The default is 150.
                    format: uint32
                start:
                    type: integer
                    description: The index to start retrieving values from, also known as offset. The index begins at 0.
                    format: uint32
        TenantManagementAPIUpdateRequestDTO:
            type: object
            properties:
                tenantCode:
                    type: string
                    description: A unique identifier for the newly created analytic tenant. (required for creating new tenants)
                tenantDisplayName:
                    type: string
                    description: A new display name to assign to the analytic tenant. (required for creating new tenants)
                industryCode:
                    type: integer
                    description: |-
                        The 6-digit NAICS code for the industry to which the analytic tenant belongs. If the code is unknown, type 000000.
                         For 2-digit codes, add trailing zeros at the end to reach 6 digits, such as 620000. (required for creating new tenants)
                    format: uint32
                purchasedModules:
                    type: array
                    items:
                        type: string
                    description: A comma-separated collection of strings that represent the Visier modules assigned to the new analytic tenant. (required for creating new tenants)
                embeddableDomains:
                    type: array
                    items:
                        type: string
                    description: A comma-separated list of strings that represent the URLs, or domains, in which Visier can be embedded. If domains at the administrating tenant level match the domains at the analytic tenant level, you do not need to include a domain for each analytic tenant. (optional)
                customProperties:
                    type: array
                    items:
                        $ref: '#/components/schemas/CustomPropertyDTO'
                    description: A list of objects that represent different customizable properties for the analytic tenant. (optional)
                ssoInstanceIssuers:
                    type: array
                    items:
                        type: string
                    description: A comma-separated list of strings that represent the issuers for the SSO providers that can authenticate this tenant. (optional)
                homeAnalysisId:
                    type: string
                    description: The unique ID of the analysis to display for this tenant when a user logs in. (optional)
                homeAnalysisByUserGroup:
                    type: array
                    items:
                        $ref: '#/components/schemas/HomeAnalysisByUserGroupDTO'
                    description: A list of objects representing the analysis to display to specific user groups when users log in. (optional)
                updateAction:
                    type: integer
                    description: |-
                        Specifies the way you want to update values. (optional, default is MERGE) Valid values:
                         MERGE: Combine the existing values with the new values;
                         REPLACE: Remove existing values and let the new values take their place.
                    format: enum
                enabled:
                    type: boolean
                    description: If "true", the tenant will be enabled. Enabled tenants have access to Visier visualizations. (optional)
                clickThroughLink:
                    type: string
                    description: A custom URL to redirect users into your portal to see the relevant content. This URL is used for links that are shared by and with your users through the sharing capability or email content. (optional)
        TenantManagementAPIUpdateResponseDTO:
            type: object
            properties:
                tenantCode:
                    type: string
                    description: A unique identifier for the newly created analytic tenant.
                tenantDisplayName:
                    type: string
                    description: A comma-separated collection of strings that represent the Visier modules assigned to the new analytic tenant.
                industryCode:
                    type: integer
                    description: |-
                        The 6-digit NAICS code for the industry to which the analytic tenant belongs. If the code is unknown, type 000000.
                         For 2-digit codes, add trailing zeros at the end to reach 6 digits, such as 620000. (required for creating new tenants)
                    format: uint32
                purchasedModules:
                    type: array
                    items:
                        type: string
                    description: A comma-separated collection of strings that represent the Visier modules assigned to the new analytic tenant.
                embeddableDomains:
                    type: array
                    items:
                        type: string
                    description: A comma-separated list of strings that represent the URLs, or domains, in which Visier can be embedded. If domains at the administrating tenant level match the domains at the analytic tenant level, you do not need to include a domain for each analytic tenant.
                customProperties:
                    type: array
                    items:
                        $ref: '#/components/schemas/CustomPropertyDTO'
                    description: A list of objects that represent different customizable properties for the analytic tenant.
                ssoInstanceIssuers:
                    type: array
                    items:
                        type: string
                    description: A comma-separated list of strings that represent the issuers for the SSO providers that can authenticate this tenant.
                homeAnalysisId:
                    type: string
                    description: The unique ID of the analysis to display for this tenant when a user logs in.
                homeAnalysisByUserGroup:
                    type: array
                    items:
                        $ref: '#/components/schemas/HomeAnalysisByUserGroupDTO'
                    description: A list of objects representing the analysis to display to specific user groups when users log in.
                status:
                    type: string
                    description: A string of tenant status (disabled/enabled). Enabled tenants have access to Visier visualizations.
                clickThroughLink:
                    type: string
                    description: A custom URL to redirect users into your portal to see the relevant content. This URL is used for links that are shared by and with your users through the sharing capability or email content.
    securitySchemes:
        CookieAuth:
            type: apiKey
            name: VisierASIDToken
            in: cookie
        ApiKeyAuth:
            type: apiKey
            name: apikey
            in: header
        LegacyTicketAuth:
            type: apiKey
            name: VisierSecureTicket
            in: header
security:
    - CookieAuth: []
    - ApiKeyAuth: []
    - LegacyTicketAuth: []
tags:
    - name: TenantManagement
