# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
  title: Visier Permission Management APIs
  description: Visier APIs for managing permissions within an organization
  license:
    name: Apache License, Version 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  version: 22222222.99201.1343
paths:
  /v1/admin/capabilities:
    get:
      tags:
        - PermissionManagement
      summary: Retrieve a list of all permission capabilities
      description: |-
        This API allows you to retrieve all the permission capabilities in your tenant.
         You can use the returned capabilities in other API calls when creating or updating permissions to assign the capability to the permission.

         <br>**Note:** <em>This API is in **limited availability**. If you are interested in using it, please contact your Customer Success Manager (CSM).</em>
      operationId: PermissionManagement_GetCapabilities
      parameters:
        - name: tenantCode
          in: query
          description: Specify the tenant to retrieve the capabilities from.
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCapabilitiesAPIResponseDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v1/admin/capabilities/{capabilityId}:
    get:
      tags:
        - PermissionManagement
      summary: Retrieve a permission capability's details
      description: |-
        This API allows you to retrieve the details of a specific capability.

         <br>**Note:** <em>This API is in **limited availability**. If you are interested in using it, please contact your Customer Success Manager (CSM).</em>
      operationId: PermissionManagement_GetCapability
      parameters:
        - name: capabilityId
          in: path
          description: The unique identifier of the capability you want to retrieve.
          required: true
          schema:
            type: string
        - name: tenantCode
          in: query
          description: Specify the tenant to retrieve a capability from.
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapabilityDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v1/admin/content-packages:
    get:
      tags:
        - PermissionManagement
      summary: Retrieve a list of all content packages
      description: |-
        This API allows you to retrieve the list of available content packages.
         You can use the returned content packages in other API calls when creating or updating permissions to add the content package to the permission.

         <br>**Note:** <em>This API is in **limited availability**. If you are interested in using it, please contact your Customer Success Manager (CSM).</em>
      operationId: PermissionManagement_GetContentPackages
      parameters:
        - name: tenantCode
          in: query
          description: Specify the tenant to retrieve the content packages from.
          schema:
            type: string
        - name: searchString
          in: query
          description: |-
            Optional search string to return only content packages whose display name or description contains that search string.
             If searchString is empty or not provided, the response returns a list of all content packages.
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetContentPackagesAPIResponseDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v1/admin/content-packages/{contentPackageId}:
    get:
      tags:
        - PermissionManagement
      summary: Retrieve a content package's details
      description: |-
        This API allows you to retrieve the details of a specific content package.

         <br>**Note:** <em>This API is in **limited availability**. If you are interested in using it, please contact your Customer Success Manager (CSM).</em>
      operationId: PermissionManagement_GetContentPackage
      parameters:
        - name: contentPackageId
          in: path
          description: The unique identifier of the content package you want to retrieve.
          required: true
          schema:
            type: string
        - name: tenantCode
          in: query
          description: Specify the tenant to retrieve a content package from.
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentPackageDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v1/admin/data-access-sets:
    get:
      tags:
        - PermissionManagement
      summary: Retrieve a list of all data access sets
      description: "This API allows you to retrieve a list of all shareable data access sets. Data access sets define the level of access that users have to properties and property values for the analytic object in a permission. Data access sets also grant access to properties of subjects that are referenced by the analytic object in the permission.\n You can assign data access sets to a permission when creating or updating permissions.\n\n **Note:** \n * If the number of valid data access sets exceeds the default limit of 100, the response status code is 206. To retrieve more than 100 data access sets, set `limit` to a higher number.\n * This API is in **limited availability**. If you are interested in using it, please contact your Customer Success Manager (CSM)."
      operationId: PermissionManagement_GetDataAccessSets
      parameters:
        - name: analyticObjectId
          in: query
          description: Specify the analytic object ID to retrieve the shareable data access sets for. Default is all analytic objects.
          schema:
            type: string
        - name: with
          in: query
          description: |-
            The information about the data access set to include in the request response.
             * If empty, returns basic information for the data access set, including its unique ID, display name, description, and analytic object ID.
             * If `details`, returns basic information and property data access information (`propertyAccessConfigs`).
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: The maximum number of data access sets to return. Default is 100. Maximum is 1000.
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataAccessSetsAPIResponseDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    post:
      tags:
        - PermissionManagement
      summary: Create shareable data access sets
      description: |-
        This API allows you to create shareable data access sets. Shareable data access sets let you reuse common data access configurations in multiple permissions.

         <br>**Note:** <em>This API is in **limited availability**. If you are interested in using it, please contact your Customer Success Manager (CSM).</em>
      operationId: PermissionManagement_CreateDataAccessSets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataAccessSetRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkDataAccessSetResponseDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v1/admin/data-access-sets/{dataAccessSetId}:
    get:
      tags:
        - PermissionManagement
      summary: Retrieve a data access set's details
      description: |-
        This API allows you to retrieve the details of a specific shareable data access set. You must know the ID of the data access set to retrieve its details. To retrieve data access set IDs, see `GET v1/admin/data-access-sets`.

         **Note:** This API is in **limited availability**. If you are interested in using it, please contact your Customer Success Manager (CSM).
      operationId: PermissionManagement_GetDataAccessSet
      parameters:
        - name: dataAccessSetId
          in: path
          description: The unique identifier of the data access set you want to retrieve.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataAccessSetDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v1/admin/data-security-objects:
    get:
      tags:
        - PermissionManagement
      summary: Retrieve a list of data security objects
      description: |-
        This API allows you to retrieve the list of available data security objects.
         Data security objects are analytic objects and their related objects that are available to define
         permissions’ data security profiles.

         <br>**Note:** <em>This API is in **limited availability**. If you are interested in using it, please contact your Customer Success Manager (CSM).</em>
      operationId: PermissionManagement_GetDataSecurityObjects
      parameters:
        - name: id
          in: query
          description: |-
            The unique identifiers of the data security objects (analytic objects) to retrieve.
             Default is all data security objects.
          schema:
            type: array
            items:
              type: string
        - name: includeDetails
          in: query
          description: |-
            If `true`, the response includes the analytic objects (display name, ID, and object type), related objects,
             securable properties, and securable dimensions. If `false`, the response only includes analytic objects
             (display name, ID, and object type). Default is `false`.
          schema:
            type: boolean
        - name: tenantCode
          in: query
          description: Specify the tenant to retrieve data security objects from.
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataSecurityObjectsAPIResponseDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v1/admin/permissions:
    get:
      tags:
        - PermissionManagement
      summary: Retrieve a list of all permissions
      description: |-
        This API allows you to retrieve the full list of user permissions in your tenant.

         <br>**Note:** <em>This API is in **limited availability**. If you are interested in using it, please contact your Customer Success Manager (CSM).</em>
      operationId: PermissionManagement_GetPermissions
      parameters:
        - name: tenantCode
          in: query
          description: Specify the tenant to retrieve the permissions from.
          schema:
            type: string
        - name: includeDetails
          in: query
          description: |-
            If `true`, returns the permission's details. If `false`, only returns the permissions' ID, display name,
             and description. Default is `false`.
          schema:
            type: boolean
        - name: includeDetailsWithStatus
          in: query
          description: |-
            If `true`, returns the validity statuses for the permission's properties in data access sets and the
             permission's dimensions, dimension members, and hierarchy properties in member filters. If `false`,
             doesn't return validity status information. Default is `false`.
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPermissionsAPIResponseDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    put:
      tags:
        - PermissionManagement
      summary: Update permissions
      description: |-
        This API allows you to update existing permissions.

         <br>**Note:** <em>This API is in **limited availability**. If you are interested in using it, please contact your Customer Success Manager (CSM).</em>
      operationId: PermissionManagement_UpdatePermissions
      parameters:
        - name: tenantCode
          in: query
          description: Specify the tenant to update permissions in.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionsListDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionBulkOperationResponseDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    post:
      tags:
        - PermissionManagement
      summary: Create permissions
      description: |-
        This API allows you to create new permissions. Administrating tenant users can specify the tenant in which to add these permissions.

         <br>**Note:** <em>This API is in **limited availability**. If you are interested in using it, please contact your Customer Success Manager (CSM).</em>
      operationId: PermissionManagement_CreatePermissions
      parameters:
        - name: tenantCode
          in: query
          description: Specify the tenant to create permissions in.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionsListDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionBulkOperationResponseDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    delete:
      tags:
        - PermissionManagement
      summary: Delete permissions
      description: |-
        This API allows you to delete existing permissions.

         <br>**Note:** <em>This API is in **limited availability**. If you are interested in using it, please contact your Customer Success Manager (CSM).</em>
      operationId: PermissionManagement_DeletePermissions
      parameters:
        - name: tenantCode
          in: query
          description: Specify the tenant to delete permissions from.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePermissionsRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionBulkOperationResponseDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v1/admin/permissions/{permissionId}:
    get:
      tags:
        - PermissionManagement
      summary: Retrieve a permission's details
      description: |-
        This API allows you to retrieve the details for a specified permission.

         <br>**Note:** <em>This API is in **limited availability**. If you are interested in using it, please contact your Customer Success Manager (CSM).</em>
      operationId: PermissionManagement_GetPermission
      parameters:
        - name: permissionId
          in: path
          description: The unique identifier of the permission you want to retrieve.
          required: true
          schema:
            type: string
        - name: tenantCode
          in: query
          description: Specify the tenant to retrieve a permission from.
          schema:
            type: string
        - name: includeDetailsWithStatus
          in: query
          description: |-
            If `true`, returns the validity statuses for the permission's properties in data access sets and the
             permission's dimensions, dimension members, and hierarchy properties in member filters. If `false`,
             doesn't return validity status information. Default is `false`.
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
components:
  schemas:
    AdminCapabilityConfigDTO:
      type: object
      properties:
        allCapabilitiesAccess:
          type: boolean
          description: If `true`, the permission has all possible capabilities.
        capabilities:
          type: array
          items:
            type: string
          description: A list of the capabilities assigned in the permission. Not required if `allCapabilitiesAccess` is true.
    AnalyticObjectDTO:
      type: object
      properties:
        analyticObjectId:
          type: string
          description: The unique ID of the analytic object.
        displayName:
          type: string
          description: An identifiable name to display in Visier, such as "Employee".
        objectType:
          enum:
            - Event
            - Subject
            - BusinessOutcomeOverlay
            - PlanOrBudgetOverlay
            - ExternalBenchmark
            - VisierBenchmark
            - UsageOverlay
            - OtherOverlay
            - InternalComparison
            - PlanAnalyticObject
          type: string
          description: The analytic object type.
          format: enum
        relatedObjects:
          type: array
          items:
            $ref: '#/components/schemas/RelatedAnalyticObjectDTO'
          description: The analytic objects related to the data security object.
        securableProperties:
          type: array
          items:
            $ref: '#/components/schemas/SecurablePropertyDTO'
          description: All available properties from the data security object and its related analytic objects that you can configure data access for.
        securableDimensions:
          type: array
          items:
            $ref: '#/components/schemas/SecurableDimensionDTO'
          description: A list of dimensions that are available to define population access filters in the permission.
    BulkDataAccessSetResponseDTO:
      type: object
      properties:
        successes:
          type: array
          items:
            $ref: '#/components/schemas/DataAccessSetSuccessDTO'
          description: The successfully created data access sets.
        failures:
          type: array
          items:
            $ref: '#/components/schemas/DataAccessSetFailureDTO'
          description: The data access sets that failed to be created and any relevant error information.
    CapabilityDTO:
      type: object
      properties:
        name:
          type: string
          description: The unique name of the capability.
        displayName:
          type: string
          description: An identifiable capability name to display in Visier, such as "Schedule Analysis".
        description:
          type: string
          description: A description of the capability.
    ContentPackageDTO:
      type: object
      properties:
        contentPackageId:
          type: string
          description: The unique ID of the content package.
        displayName:
          type: string
          description: An identifiable content package name to display in Visier, such as "Talent Acquisition Core Content".
        description:
          type: string
          description: A description of the content package.
    CreateDataAccessSetRequestDTO:
      type: object
      properties:
        shareablePropertyAccessConfigs:
          type: array
          items:
            $ref: '#/components/schemas/DataAccessSetDTO'
          description: The data access sets to be created.
    DataAccessSetDTO:
      type: object
      properties:
        id:
          type: string
          description: The unique ID of the data access set.
        displayName:
          type: string
          description: An identifiable data access set name to display in Visier, such as "Aggregate(Employee)".
        description:
          type: string
          description: A description of the data access set.
        analyticObjectId:
          type: string
          description: The unique ID of the analytic object that the data access set is for.
        propertyAccessConfigs:
          type: array
          items:
            $ref: '#/components/schemas/PropertyAccessConfigDTO'
          description: The data access assigned to properties in the data access set.
    DataAccessSetErrorDTO:
      type: object
      properties:
        message:
          type: string
          description: Error message
        rci:
          type: string
          description: A root cause identifier that allows Visier to determine the source of the problem.
    DataAccessSetFailureDTO:
      type: object
      properties:
        dataAccessSetId:
          type: string
          description: The unique identifier associated with the data access set.
        displayName:
          type: string
          description: An identifiable data access set name to display in Visier, such as "Detailed(Employee)".
        error:
          allOf:
            - $ref: '#/components/schemas/DataAccessSetErrorDTO'
          description: The error associated with the failure.
    DataAccessSetSuccessDTO:
      type: object
      properties:
        dataAccessSetId:
          type: string
          description: The unique identifier associated with the created data access set.
        displayName:
          type: string
          description: An identifiable data access set name to display in Visier, such as "Detailed(Employee)".
    DataSecurityProfileDTO:
      type: object
      properties:
        analyticObjectId:
          type: string
          description: The unique ID of the analytic object assigned data security in this permission.
        propertySetConfig:
          allOf:
            - $ref: '#/components/schemas/PropertySetConfigDTO'
          description: A list of objects representing the data access for an analytic object’s properties.
        allDataPointAccess:
          type: boolean
          description: If `true`, the permission grants access to the entire population. If `false`, define `memberFilterConfigs` to set custom population access.
        memberFilterConfigs:
          type: array
          items:
            $ref: '#/components/schemas/MemberFilterConfigDTO'
          description: Custom filters that define population access for an item in the permission.
        inheritedAccessConfigs:
          type: array
          items:
            $ref: '#/components/schemas/InheritedAccessConfigDTO'
          description: |-
            The events and related objects inherited from the analytic object.
             By default, all events and related objects associated with the analytic object will be inherited from the analytic object in a permission.
             For example, if you assign access to Employee, then access to the Employee Exit event is inherited in the permission.
             To remove access to an event or related object, add the object to `inheritedAccessConfigs` with `removeAccess`: true.
             To add custom filters to an event or related object, add the object to `inheritedAccessConfigs` and define `memberFilterConfigs`.
        inheritedReferenceMemberFilterConfig:
          allOf:
            - $ref: '#/components/schemas/InheritedReferenceMemberFilterConfigDTO'
          description: |-
            Configures the analytic object to inherit population access filters from. The target analytic object must be assigned population access in the permission and have a binding (strong) reference from the source analytic object.
             * For example, assume `Applicant` -> `Requisition` is configured to be a binding (strong) reference.
             For `Applicant` (source analytic object) to inherit population access filters from `Requisition` (target analytic object), in the Applicant `dataSecurityProfile`, set `inheritedReferenceMemberFilterConfig` to `Requisition`. In this example, Applicant will inherit filters from Requisition because Requsition is assigned data security in this permission and there is a binding (strong) reference from Applicant to Requisition.
    DeletePermissionsRequestDTO:
      type: object
      properties:
        permissionIds:
          type: array
          items:
            type: string
          description: The identifiers of the permissions to delete.
    DimensionFilterDTO:
      type: object
      properties:
        staticDimensionFilter:
          $ref: '#/components/schemas/StaticDimensionFilterDTO'
        dynamicDimensionFilter:
          $ref: '#/components/schemas/DynamicDimensionFilterDTO'
    DynamicDimensionFilterDTO:
      type: object
      properties:
        dimensionId:
          type: string
          description: The dimension ID associated with the filter.
        subjectReferencePath:
          type: array
          items:
            type: string
          description: The subject reference path.
        dynamicPropertyMappings:
          type: array
          items:
            $ref: '#/components/schemas/DynamicPropertyMappingDTO'
          description: The properties assigned population access in the dynamic filter.
        dimensionStatus:
          enum:
            - Unset
            - Valid
            - NoData
            - NotFound
          type: string
          description: |-
            The dimension's validity status. Valid values: Valid, NoData, NotFound.
             * **Valid**: The object exists and has loaded data.
             * **NoData**: The object exists but doesn't have loaded data.
             * **NotFound**: The object doesn't exist.
          format: enum
    DynamicPropertyMappingDTO:
      type: object
      properties:
        hierarchyPropertyId:
          type: string
          description: The unique ID of the property.
        userProperty:
          allOf:
            - $ref: '#/components/schemas/UserPropertyDTO'
          description: The user property that you want to link the name property or organization head to.
        hierarchyPropertyStatus:
          enum:
            - Unset
            - Valid
            - NoData
            - NotFound
          type: string
          description: |-
            The property's validity status. Valid values: `Valid`, `NotFound`.
             * **Valid**: The object exists and has loaded data.
             * **NotFound**: The object doesn't exist.
          format: enum
    GetCapabilitiesAPIResponseDTO:
      type: object
      properties:
        capabilities:
          type: array
          items:
            $ref: '#/components/schemas/CapabilityDTO'
          description: A list of objects representing the available capabilities.
    GetContentPackagesAPIResponseDTO:
      type: object
      properties:
        contentPackages:
          type: array
          items:
            $ref: '#/components/schemas/ContentPackageDTO'
          description: A list of objects representing the available content packages.
    GetDataAccessSetsAPIResponseDTO:
      type: object
      properties:
        dataAccessSets:
          type: array
          items:
            $ref: '#/components/schemas/DataAccessSetDTO'
          description: A list of objects representing the shareable data access sets.
    GetDataSecurityObjectsAPIResponseDTO:
      type: object
      properties:
        analyticObjects:
          type: array
          items:
            $ref: '#/components/schemas/AnalyticObjectDTO'
          description: A list of analytic objects and their related objects that are available to define data access to.
    GetPermissionsAPIResponseDTO:
      type: object
      properties:
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/PermissionDTO'
          description: A list of objects representing the available permissions.
      description: List of available permissions
    GoogleProtobufAny:
      type: object
      properties:
        '@type':
          type: string
          description: The type of the serialized message.
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
    HierarchyPropertyDTO:
      type: object
      properties:
        hierarchyPropertyId:
          type: string
          description: The unique ID of the property.
        displayName:
          type: string
          description: An identifiable property name to display in Visier, such as "Name Property".
    InheritedAccessConfigDTO:
      type: object
      properties:
        analyticObjectId:
          type: string
          description: The analytic object ID associated with the inherited access configuration.
        removeAccess:
          type: boolean
          description: The flag for removing access to the inherited analytic object.
        memberFilterConfigs:
          type: array
          items:
            $ref: '#/components/schemas/MemberFilterConfigDTO'
          description: Custom filters that define population access for an inherited analytic object in the permission.
    InheritedReferenceMemberFilterConfigDTO:
      type: object
      properties:
        targetAnalyticObjectId:
          type: string
          description: |-
            *
            The unique ID of the analytic object that the source
            analytic object should inherit filters from. The target analytic object must have a binding (strong) reference from the source analytic object.
    MemberFilterConfigDTO:
      type: object
      properties:
        dimensionFilters:
          type: array
          items:
            $ref: '#/components/schemas/DimensionFilterDTO'
          description: "A list of objects representing the custom filters that define population access for the item. \n A custom filter can be a \"member filter\" (`staticDimensionFilter`) or a \"dynamic filter\" (`dynamicDimensionFilter`)."
    MemberSelectionDTO:
      type: object
      properties:
        namePath:
          type: array
          items:
            type: string
          description: The member name path.
        excluded:
          type: boolean
          description: If `true`, population access is granted for all members except this member.
        dimensionMemberStatus:
          enum:
            - Unset
            - Valid
            - NoData
            - NotFound
          type: string
          description: |-
            The dimension member's validity status. Valid values: Valid, NotFound.
             * **Valid**: The object exists and has loaded data.
             * **NotFound**: The object doesn't exist.
          format: enum
    PermissionBulkOperationResponseDTO:
      type: object
      properties:
        successes:
          type: array
          items:
            $ref: '#/components/schemas/PermissionSuccessDTO'
          description: The successfully processed permissions.
        failures:
          type: array
          items:
            $ref: '#/components/schemas/PermissionFailureDTO'
          description: The permissions that did not process and any relevant error information.
    PermissionDTO:
      type: object
      properties:
        permissionId:
          type: string
          description: The unique identifier associated with the permission.
        displayName:
          type: string
          description: An identifiable permission name to display in Visier, such as "Diversity Access".
        description:
          type: string
          description: A user-defined description of the permission.
        dataSecurityProfiles:
          type: array
          items:
            $ref: '#/components/schemas/DataSecurityProfileDTO'
          description: A list of objects representing the data security for each item in a permission.
        adminCapabilityConfig:
          allOf:
            - $ref: '#/components/schemas/AdminCapabilityConfigDTO'
          description: The capabilities assigned in the permission.
        roleModulesConfig:
          allOf:
            - $ref: '#/components/schemas/RoleModulesConfigDTO'
          description: A list of content packages assigned to the permission.
    PermissionErrorDTO:
      type: object
      properties:
        message:
          type: string
          description: Error message
        rci:
          type: string
          description: A root cause identifier that allows Visier to determine the source of the problem.
    PermissionFailureDTO:
      type: object
      properties:
        permissionId:
          type: string
          description: The unique identifier associated with the permission.
        displayName:
          type: string
          description: An identifiable permission name to display in Visier, such as "Diversity Access".
        error:
          allOf:
            - $ref: '#/components/schemas/PermissionErrorDTO'
          description: The error associated with the failure.
    PermissionSuccessDTO:
      type: object
      properties:
        permissionId:
          type: string
          description: The unique identifier associated with the permission.
        displayName:
          type: string
          description: An identifiable permission name to display in Visier, such as "Diversity Access".
    PermissionsListDTO:
      type: object
      properties:
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/PermissionDTO'
          description: The list of permissions that will be created or updated
    PropertyAccessConfigDTO:
      type: object
      properties:
        propertyId:
          type: string
          description: The property ID associated with the property access configuration.
        analyticObjectId:
          type: string
          description: The analytic object ID of the property.
        analyticObjectReferencePaths:
          type: array
          items:
            type: string
          description: The path to the analytic object reference. Empty if the configuration is not a reference.
        accessLevel:
          enum:
            - None
            - Aggregate
            - Detailed
          type: string
          description: |-
            The access level of the property. Valid values are: `Aggregate`, `Detailed`.
             * **Aggregate**: The property can only be accessed as part of an aggregate.
             * **Detailed**: The property can be accessed at a detailed level.
          format: enum
        propertyStatus:
          enum:
            - Unset
            - Valid
            - NoData
            - NotFound
          type: string
          description: |-
            The property's validity status. Valid values: `Valid`, `NoData`, `NotFound`.
             * **Valid**: The object exists and has loaded data.
             * **NoData**: The object exists but doesn't have loaded data.
             * **NotFound**: The object doesn't exist.
          format: enum
    PropertySetConfigDTO:
      type: object
      properties:
        propertyAccessConfigs:
          type: array
          items:
            $ref: '#/components/schemas/PropertyAccessConfigDTO'
          description: The data access for a property.
        shareableDataAccessSet:
          allOf:
            - $ref: '#/components/schemas/ShareableDataAccessSet'
          description: A shareable data access set. Shareable data access sets may be linked in multiple permissions.
    RelatedAnalyticObjectDTO:
      type: object
      properties:
        analyticObjectId:
          type: string
          description: The analytic object ID.
        displayName:
          type: string
          description: An identifiable analytic object name to display in Visier, such as "Recognition".
    RoleModulesConfigDTO:
      type: object
      properties:
        contentPackageIds:
          type: array
          items:
            type: string
          description: The unique IDs of the content packages assigned to the permission.
    SecurableDimensionDTO:
      type: object
      properties:
        dimensionId:
          type: string
          description: The dimension ID.
        displayName:
          type: string
          description: An identifiable dimension name to display in Visier, such as "Contract Type".
        analyticObjectIds:
          type: array
          items:
            type: string
          description: A list of analytic object IDs.
        hierarchyProperties:
          type: array
          items:
            $ref: '#/components/schemas/HierarchyPropertyDTO'
          description: The list of hierarchies you can map to a user in a permission's dynamic filter.
    SecurablePropertyDTO:
      type: object
      properties:
        propertyId:
          type: string
          description: The property ID.
        displayName:
          type: string
          description: An identifiable property name to display in Visier, such as "Job Pay Level".
        analyticObjectId:
          type: string
          description: The property's analytic object ID.
        isPrimaryKey:
          type: boolean
          description: If true, this property is the analytic object's primary key.
        referenceSymbolName:
          type: string
          description: The reference symbol name.
    ShareableDataAccessSet:
      type: object
      properties:
        dataAccessSetId:
          type: string
          description: The unique identifier of the shareable data access set.
    StaticDimensionFilterDTO:
      type: object
      properties:
        dimensionId:
          type: string
          description: The dimension ID associated with the filter.
        subjectReferencePath:
          type: array
          items:
            type: string
          description: The subject reference path.
        memberSelections:
          type: array
          items:
            $ref: '#/components/schemas/MemberSelectionDTO'
          description: A list of objects representing the dimension members assigned population access in the member filter.
        dimensionStatus:
          enum:
            - Unset
            - Valid
            - NoData
            - NotFound
          type: string
          description: |-
            The dimension's validity status. Valid values: Valid, NoData, NotFound.
             * **Valid**: The object exists and has loaded data.
             * **NoData**: The object exists but doesn't have loaded data.
             * **NotFound**: The object doesn't exist.
          format: enum
    Status:
      type: object
      properties:
        code:
          type: integer
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
          format: int32
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
        details:
          type: array
          items:
            $ref: '#/components/schemas/GoogleProtobufAny'
          description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
      description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
    UserPropertyDTO:
      type: object
      properties:
        name:
          type: string
          description: The name property to map to in the dynamic filter. Valid values are one of `username`, `email`, `employeeId`.
  securitySchemes:
    CookieAuth:
      type: apiKey
      name: VisierASIDToken
      in: cookie
    ApiKeyAuth:
      type: apiKey
      name: apikey
      in: header
    BearerAuth:
      type: http
      scheme: bearer
    OAuth2Auth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: /v1/auth/oauth2/authorize
          tokenUrl: /v1/auth/oauth2/token
          scopes:
            read: Grants read access
            write: Grants write access
        password:
          tokenUrl: /v1/auth/oauth2/token
          scopes:
            read: Grants read access
            write: Grants write access
tags:
  - name: PermissionManagement
security:
  - ApiKeyAuth: []
    BearerAuth: []
  - ApiKeyAuth: []
    CookieAuth: []
  - ApiKeyAuth: []
    OAuth2Auth: []
